class Solution:
    def productExceptSelf(self, nums) :
        before = [1] * len(nums)
        after = [1] * len(nums)
        product = [0] * len(nums)

        for i in range(1, len(nums)):
            before[i] = before[i - 1] * nums[i - 1]
            #print(before)

        for i in range(len(nums) - 2, -1, -1):
            after[i] = after[i + 1] * nums[i + 1]
            print(after)

        for i in range(0, len(nums)):
            product[i] = before[i] * after[i]

        return product




n=[1,2,3,4]
print(Solution().productExceptSelf(n))


space=o(n)






























